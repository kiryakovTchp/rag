version: '3.8'

services:
  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"  # UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
      - "6831:6831/udp"  # Jaeger Thrift UDP
      - "6832:6832/udp"  # Jaeger Thrift UDP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_OTLP_ENDPOINT=0.0.0.0:4317
    networks:
      - observability

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - observability

  # Grafana for visualization and alerting
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - observability
    depends_on:
      - prometheus

  # Redis for queue monitoring
  redis-monitor:
    image: redis:7-alpine
    container_name: redis-monitor
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_monitor_data:/data
    networks:
      - observability

volumes:
  prometheus_data:
  grafana_data:
  redis_monitor_data:

networks:
  observability:
    driver: bridge
