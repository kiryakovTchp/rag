#!/bin/bash

# Start Observability Stack for PromoAI RAG
# This script starts Jaeger, Prometheus, and Grafana

set -e

echo "üöÄ Starting PromoAI RAG Observability Stack..."

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker first."
    exit 1
fi

# Navigate to infra directory
cd "$(dirname "$0")/../infra"

# Start observability services
echo "üìä Starting Jaeger, Prometheus, and Grafana..."
docker-compose -f observability.yml up -d

# Wait for services to be ready
echo "‚è≥ Waiting for services to be ready..."

# Wait for Jaeger
echo "üîç Waiting for Jaeger..."
until curl -s http://localhost:16686 > /dev/null 2>&1; do
    sleep 2
done
echo "‚úÖ Jaeger is ready at http://localhost:16686"

# Wait for Prometheus
echo "üìà Waiting for Prometheus..."
until curl -s http://localhost:9090 > /dev/null 2>&1; do
    sleep 2
done
echo "‚úÖ Prometheus is ready at http://localhost:9090"

# Wait for Grafana
echo "üìä Waiting for Grafana..."
until curl -s http://localhost:3000 > /dev/null 2>&1; do
    sleep 2
done
echo "‚úÖ Grafana is ready at http://localhost:3000"

# Wait for Redis monitor
echo "üî¥ Waiting for Redis monitor..."
until docker exec redis-monitor redis-cli ping > /dev/null 2>&1; do
    sleep 2
done
echo "‚úÖ Redis monitor is ready at localhost:6380"

echo ""
echo "üéâ Observability Stack is ready!"
echo ""
echo "üìä Services:"
echo "  ‚Ä¢ Jaeger UI:     http://localhost:16686"
echo "  ‚Ä¢ Prometheus:    http://localhost:9090"
echo "  ‚Ä¢ Grafana:       http://localhost:3000 (admin/admin)"
echo "  ‚Ä¢ Redis Monitor: localhost:6380"
echo ""
echo "üîß Environment variables to set:"
echo "  export OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317"
echo "  export OTEL_SERVICE_NAME=api  # or 'worker' for workers"
echo ""
echo "üìù To stop services:"
echo "  cd infra && docker-compose -f observability.yml down"
echo ""
echo "üß™ To test tracing:"
echo "  # Start API with tracing enabled"
echo "  OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317 OTEL_SERVICE_NAME=api uvicorn api.main:app --reload"
echo ""
echo "  # Start worker with tracing enabled"
echo "  OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317 OTEL_SERVICE_NAME=worker celery -A workers.app worker --loglevel=info"
