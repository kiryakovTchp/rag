.PHONY: help start stop restart logs clean test-user build-frontend build-backend

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED=\033[0;31m
GREEN=\033[0;32m
YELLOW=\033[1;33m
BLUE=\033[0;34m
NC=\033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(BLUE)üöÄ PromoAI RAG - –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º$(NC)"
	@echo ""
	@echo "$(GREEN)–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  $(YELLOW)%-15s$(NC) %s\n", $$1, $$2}' $(MAKEFILE_LIST)
	@echo ""
	@echo "$(GREEN)–ü—Ä–∏–º–µ—Ä—ã:$(NC)"
	@echo "  make start          # –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç"
	@echo "  make stop           # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  make logs           # –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
	@echo "  make test-user      # –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"

start: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ PromoAI RAG –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	@chmod +x start.sh
	@./start.sh

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	docker-compose down

restart: stop start ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üìã –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	docker-compose logs -f

logs-api: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ API
	@echo "$(BLUE)üìã –õ–æ–≥–∏ API:$(NC)"
	docker-compose logs -f api

logs-frontend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	@echo "$(BLUE)üìã –õ–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:$(NC)"
	docker-compose logs -f frontend

logs-worker: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤–æ—Ä–∫–µ—Ä–æ–≤
	@echo "$(BLUE)üìã –õ–æ–≥–∏ –≤–æ—Ä–∫–µ—Ä–æ–≤:$(NC)"
	docker-compose logs -f worker

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ volumes
	@echo "$(RED)üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ volumes...$(NC)"
	docker-compose down -v
	docker system prune -f

test-user: ## –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	@echo "$(BLUE)üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...$(NC)"
	@echo "$(YELLOW)–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞: make start$(NC)"
	@echo "$(YELLOW)–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:$(NC)"
	@echo "$(GREEN)  Email: test@promoai.com$(NC)"
	@echo "$(GREEN)  –ü–∞—Ä–æ–ª—å: test123456$(NC)"
	@echo ""
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...$(NC)"
	docker-compose exec api python scripts/create_test_user.py

build-frontend: ## –°–æ–±—Ä–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞...$(NC)"
	cd web && npm run build

build-backend: ## –°–æ–±—Ä–∞—Ç—å –±—ç–∫–µ–Ω–¥ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞...$(NC)"
	docker-compose build api worker

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üîç –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	docker-compose ps

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@echo "$(BLUE)API:$(NC)"
	@curl -f http://localhost:8000/health > /dev/null 2>&1 && echo "$(GREEN)‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç$(NC)" || echo "$(RED)‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo "$(BLUE)–§—Ä–æ–Ω—Ç–µ–Ω–¥:$(NC)"
	@curl -f http://localhost:3000 > /dev/null 2>&1 && echo "$(GREEN)‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç$(NC)" || echo "$(RED)‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo "$(BLUE)Grafana:$(NC)"
	@curl -f http://localhost:3001 > /dev/null 2>&1 && echo "$(GREEN)‚úÖ Grafana —Ä–∞–±–æ—Ç–∞–µ—Ç$(NC)" || echo "$(RED)‚ùå Grafana –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

db-shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	@echo "$(BLUE)üóÑÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	docker-compose exec db psql -U rag_user -d rag_db

redis-cli: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Redis CLI
	@echo "$(BLUE)üî¥ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis CLI...$(NC)"
	docker-compose exec redis redis-cli

frontend-shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	@echo "$(BLUE)üì± –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...$(NC)"
	docker-compose exec frontend sh

api-shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É API
	@echo "$(BLUE)üîß –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É API...$(NC)"
	docker-compose exec api bash

worker-shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –≤–æ—Ä–∫–µ—Ä–∞
	@echo "$(BLUE)‚öôÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –≤–æ—Ä–∫–µ—Ä–∞...$(NC)"
	docker-compose exec worker bash

install-deps: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@echo "$(BLUE)Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:$(NC)"
	pip install -r requirements.txt
	@echo "$(BLUE)Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:$(NC)"
	cd web && npm install

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–±–µ–∑ Docker)
	@echo "$(BLUE)üîß –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@echo "$(YELLOW)–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL –∏ Redis –∑–∞–ø—É—â–µ–Ω—ã$(NC)"
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ API...$(NC)"
	cd api && uvicorn main:app --reload --host 0.0.0.0 --port 8000 &
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...$(NC)"
	cd web && npm run dev &
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ —Ñ–æ–Ω–µ$(NC)"
	@echo "$(BLUE)API: http://localhost:8000$(NC)"
	@echo "$(BLUE)–§—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost:3000$(NC)"
	@echo "$(YELLOW)–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: pkill -f uvicorn && pkill -f vite$(NC)"
